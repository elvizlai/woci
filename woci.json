{
  "Concurrent": 2,
  "Env": {
    "REPO": "git@github.com:wothing/17mei.git",
    "WORKDIR": "/gopath/src/github.com/wothing/17mei",
    "BUILD": "CGO_ENABLED=0 GOBIN=/app go install -ldflags '-X github.com/wothing/17mei/db._DEBUG=TRUE'",
    "BASEIMAGE": "index.tenxcloud.com/sdrzlyz/alpine-ca",
    "PARA": "-etcd http://[TRACER]-etcd.test:2379 -h [TRACER]-[NAME]",
    "START": "docker run -it -d --net=test -v app:/app --name [TRACER]-[NAME] $BASEIMAGE /app/[NAME] $PARA",
    "CLEAN": "docker stop [TRACER]-[NAME] && docker rm [TRACER]-[NAME]"
  },
  "Initial": [
    "docker run -d --net=test --name [TRACER]-etcd quay.io/coreos/etcd etcd --listen-client-urls 'http://:2379,http://:4001' --advertise-client-urls 'http://:2379,http://:4001'",
    "sleep 5s",
    "docker exec [TRACER]-etcd etcdctl set /17mei/pgsql/host [TRACER]-pgsql",
    "docker exec [TRACER]-etcd etcdctl set /17mei/pgsql/port 5432",
    "docker exec [TRACER]-etcd etcdctl set /17mei/pgsql/name meidb",
    "docker exec [TRACER]-etcd etcdctl set /17mei/pgsql/user postgres",
    "docker exec [TRACER]-etcd etcdctl set /17mei/pgsql/password wothing",
    "docker exec [TRACER]-etcd etcdctl set /17mei/redis/host [TRACER]-redis",
    "docker exec [TRACER]-etcd etcdctl set /17mei/redis/port 6379",
    "docker exec [TRACER]-etcd etcdctl set /17mei/redis/password ''",
    "docker run -d --net=test --name [TRACER]-nsqd nsqio/nsq /nsqd",
    "docker run -d --net=test --name [TRACER]-redis redis",
    "docker run -d --net=test --name [TRACER]-pgsql -e POSTGRES_DB=meidb -e POSTGRES_PASSWORD=wothing postgres",
    "/woci plugin postgres postgres://postgres:wothing@[TRACER]-pgsql.test:5432/meidb?sslmode=disable CMD \"CREATE EXTENSION IF NOT EXISTS \"pgcrypto\";\"",
    "/woci plugin postgres postgres://postgres:wothing@[TRACER]-pgsql.test:5432/meidb?sslmode=disable FILE $WORKDIR/sql"
  ],
  "Before": [
    "make -C $WORKDIR idl ve"
  ],
  "Modules": [
    {
      "Name": "user",
      "Build": "cd $WORKDIR/user && $BUILD",
      "Start": "$START",
      "Clean": "$CLEAN"
    },
    {
      "Name": "mediastore",
      "Build": "cd $WORKDIR/mediastore && $BUILD",
      "Start": "$START",
      "Clean": "$CLEAN"
    },
    {
      "Name": "story",
      "Build": "cd $WORKDIR/story && $BUILD",
      "Start": "$START",
      "Clean": "$CLEAN"
    },
    {
      "Name": "verification",
      "Build": "cd $WORKDIR/verification && $BUILD",
      "Start": "$START",
      "Clean": "$CLEAN"
    },
    {
      "Name": "push",
      "Build": "cd $WORKDIR/push && $BUILD",
      "Start": "$START",
      "Clean": "$CLEAN"
    },
    {
      "Name": "other",
      "Build": "cd $WORKDIR/other && $BUILD",
      "Start": "$START",
      "Clean": "$CLEAN"
    },
    {
      "Name": "activity",
      "Build": "cd $WORKDIR/activity && $BUILD",
      "Start": "$START",
      "Clean": "$CLEAN"
    },
    {
      "Name": "version",
      "Build": "cd $WORKDIR/version && $BUILD",
      "Start": "$START",
      "Clean": "$CLEAN"
    },
    {
      "Name": "statistic",
      "Build": "cd $WORKDIR/statistic && $BUILD",
      "Start": "$START",
      "Clean": "$CLEAN"
    },
    {
      "Name": "share",
      "Build": "cd $WORKDIR/share && $BUILD",
      "Start": "$START",
      "Clean": "$CLEAN"
    },
    {
      "Name": "wechat",
      "Build": "cd $WORKDIR/wechat && $BUILD",
      "Start": "$START",
      "Clean": "$CLEAN"
    },
    {
      "Name": "authority",
      "Build": "cd $WORKDIR/authority && $BUILD",
      "Start": "$START",
      "Clean": "$CLEAN"
    },
    {
      "Name": "config",
      "Build": "cd $WORKDIR/config && $BUILD",
      "Start": "$START",
      "Clean": "$CLEAN"
    },
    {
      "Name": "message",
      "Build": "cd $WORKDIR/message && $BUILD",
      "Start": "$START",
      "Clean": "$CLEAN"
    },
    {
      "Name": "sms",
      "Build": "cd $WORKDIR/sms && $BUILD",
      "Start": "$START",
      "Clean": "$CLEAN"
    },
    {
      "Name": "hospital",
      "Build": "cd $WORKDIR/hospital && $BUILD",
      "Start": "$START",
      "Clean": "$CLEAN"
    },
    {
      "Name": "order",
      "Build": "cd $WORKDIR/order && $BUILD",
      "Start": "$START",
      "Clean": "$CLEAN"
    },
    {
      "Name": "confidant",
      "Build": "cd $WORKDIR/confidant && $BUILD",
      "Start": "$START",
      "Clean": "$CLEAN"
    },
    {
      "Name": "goods",
      "Build": "cd $WORKDIR/goods && $BUILD",
      "Start": "$START",
      "Clean": "$CLEAN"
    },
    {
      "Name": "account",
      "Build": "cd $WORKDIR/account && $BUILD",
      "Start": "$START",
      "Clean": "$CLEAN"
    },
    {
      "Name": "banner",
      "Build": "cd $WORKDIR/banner && $BUILD",
      "Start": "$START",
      "Clean": "$CLEAN"
    },
    {
      "Name": "easemob",
      "Build": "cd $WORKDIR/easemob && $BUILD",
      "Start": "$START",
      "Clean": "$CLEAN"
    },
    {
      "Name": "payment",
      "Build": "cd $WORKDIR/payment && $BUILD",
      "Start": "$START",
      "Clean": "$CLEAN"
    },
    {
      "Name": "coupon",
      "Build": "cd $WORKDIR/coupon && $BUILD",
      "Start": "$START",
      "Clean": "$CLEAN"
    },
    {
      "Name": "credit",
      "Build": "cd $WORKDIR/credit && $BUILD",
      "Start": "$START",
      "Clean": "$CLEAN"
    },
    {
      "Name": "leaflet",
      "Build": "cd $WORKDIR/leaflet && $BUILD",
      "Start": "$START",
      "Clean": "$CLEAN"
    },
    {
      "Name": "appway",
      "Build": "cd $WORKDIR/gateway/appway && $BUILD",
      "Start": "$START",
      "Clean": "$CLEAN"
    },
    {
      "Name": "interway",
      "Build": "cd $WORKDIR/gateway/interway && $BUILD",
      "Start": "$START",
      "Clean": "$CLEAN"
    },
    {
      "Name": "hospway",
      "Build": "cd $WORKDIR/gateway/hospway && $BUILD",
      "Start": "$START",
      "Clean": "$CLEAN"
    }
  ],
  "Test": [
    "CGO_ENABLED=0 TestEnv=CI CiTracer=[TRACER] go test -v $WORKDIR/gateway/tests/[PLACEHOLDER]*.go"
  ],
  "After": [
    "docker ps -a | grep [TRACER] | awk '{print $1}' | xargs docker stop",
    "docker ps -a | grep [TRACER] | awk '{print $1}' | xargs docker rm"
  ]
}
